name: CI/CD
on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - main

  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
      - name: black_isort_flake8_mypy
        run: nox -s form lint type
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
      - name: pytest_xdoctest
        run: nox -s tests doc_tests
      - name: Upload to codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true
  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Nox
        uses: excitedleigh/setup-nox@v2.0.0
      - name: Install Poetry
        uses: snok/install-poetry@v1.1.6
        with:
          version: 1.1.6
      - name: safety
        run: nox -s security
  release:
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs: [lint, test, security]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Pyton
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Get Dependencies
        run: |
          pip install poetry python-semantic-release
      - name: Python Semantic Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: |
          semantic-release -v DEBUG publish
